version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: ffdd-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ffdd
    volumes:
      - mongo_data:/data/db
      - ./server/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ffdd-network

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ffdd-server
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGO_URI: mongodb://admin:password123@mongo:27017/ffdd?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      CLIENT_URL: http://localhost:5173
      MOMO_PARTNER_CODE: ${MOMO_PARTNER_CODE}
      MOMO_ACCESS_KEY: ${MOMO_ACCESS_KEY}
      MOMO_SECRET_KEY: ${MOMO_SECRET_KEY}
      MOMO_ENDPOINT_CREATE: https://test-payment.momo.vn/v2/gateway/api/create
      MOMO_IPN_URL: https://your-domain.com/api/payments/momo/ipn
      MOMO_RETURN_URL: https://your-domain.com/payment/result
    depends_on:
      - mongo
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - ffdd-network

  # Frontend React App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ffdd-client
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:4000
      VITE_SOCKET_URL: http://localhost:4000
    depends_on:
      - server
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - ffdd-network

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: ffdd-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - server
      - client
    networks:
      - ffdd-network

volumes:
  mongo_data:

networks:
  ffdd-network:
    driver: bridge

