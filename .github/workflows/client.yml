name: Client CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'client/**'
      - '.github/workflows/client.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'client/**'
      - '.github/workflows/client.yml'

env:
  NODE_VERSION: '18'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Lint vÃ  Test
  test:
    name: Test Client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist/
          retention-days: 7

  # Job 2: Simple Build Test (no Docker for learning project)
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Test build
        run: |
          echo "âœ… Client build test completed!"
          echo "ðŸŽ‰ No Docker needed for learning project!"

  # Job 3: Deploy to Staging (náº¿u cÃ³ staging environment)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    
    steps:
      - name: Deploy to staging
        run: |
          echo "Deploying client to staging environment..."
          # ThÃªm logic deploy staging á»Ÿ Ä‘Ã¢y
          # VÃ­ dá»¥: kubectl apply, docker-compose up, etc.

  # Job 4: Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying client to production environment..."
          # ThÃªm logic deploy production á»Ÿ Ä‘Ã¢y
          # VÃ­ dá»¥: kubectl apply, docker-compose up, etc.
